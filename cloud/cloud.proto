syntax = "proto3";

package particle.cloud;

//
// Application state
//

enum VariableType {
  VARIABLE_TYPE_INVALID = 0;
  VARIABLE_TYPE_BOOL = 1,
  VARIABLE_TYPE_INT = 2,
  VARIABLE_TYPE_DOUBLE = 3,
  VARIABLE_TYPE_STRING = 4
}

message Function {
  string name = 1;
}

message Functions {
  repeated Function functions = 1;
}

message Variable {
  string name = 1;
  VariableType type = 2;
}

message Variables {
  repeated Variable variables = 1;
}

message Subscription {
  string prefix = 1;
}

message Subscriptions {
  repeated Subscription subscriptions = 1;
}

message ApplicationState {
  Functions functions = 1;
  Variables variables = 2;
  Subscriptions subscriptions = 3;
}

//
// System state
//

message FirmwareModuleType {
  FIRMWARE_MODULE_TYPE_INVALID = 0;
  FIRMWARE_MODULE_TYPE_SYSTEM_PART = 1;
  FIRMWARE_MODULE_TYPE_USER_PART = 2;
  FIRMWARE_MODULE_TYPE_BOOTLOADER = 3;
  FIRMWARE_MODULE_TYPE_RADIO_STACK = 4;
  FIRMWARE_MODULE_TYPE_NCP = 5;
}

message FirmwareModuleValidationFlag {
  FIRMWARE_MODULE_VALIDATION_FLAG_NONE = 0;
  FIRMWARE_MODULE_VALIDATION_FLAG_CRC32_VALID = 0x01;
  FIRMWARE_MODULE_VALIDATION_FLAG_SHA256_VALID = 0x02;
}

message FirmwareModuleDependency {
  FirmwareModuleType type = 1;
  uint32 index = 2;
  uint32 version = 3;
}

message FirmwareModuleInfo {
  FirmwareModuleType type = 1;
  uint32 index = 2;
  uint32 version = 3;
  repeated FirmwareModuleDependency dependencies = 4;
  bytes crc32 = 5;
  bytes sha256 = 6;
  uint32 validation_flags = 7;
}

message ClientConfig {
  uint32 keepalive_interval = 1;
  bool firmware_updates_enabled = 2;
}

message SystemState {
  repeated FirmwareModuleInfo firmware_modules = 1;
  ClientConfig config = 2;
}

//
// Client state
//

enum ClientStateFlag {
  CLIENT_STATE_FLAG_NONE = 0;
  CLIENT_STATE_FLAG_FUNCTIONS = 0x01;
  CLIENT_STATE_FLAG_VARIABLES = 0x02;
  CLIENT_STATE_FLAG_SUBSCRIPTIONS = 0x04;
  CLIENT_STATE_FLAG_FIRMWARE_MODULES = 0x08;
  CLIENT_STATE_FLAG_CONFIG = 0x10;
  CLIENT_STATE_FLAG_ALL = CLIENT_STATE_FLAG_FUNCTIONS | CLIENT_STATE_FLAG_VARIABLES |
      CLIENT_STATE_FLAG_SUBSCRIPTIONS | CLIENT_STATE_FLAG_FIRMWARE_MODULES |
      CLIENT_STATE_FLAG_CONFIG;
}

message ClientState {
  SystemState system_state = 1;
  ApplicationState app_state = 2;
  uint32 state_flags = 3;
  uint32 rev_num = 4; // Incremented every time the client state changes
  bytes checksum = 5; // SHA-256 checksum of the current client state
}

//
// Request and response messages
//

message HelloRequest {
  bytes device_id = 1;
  bytes client_state_checksum = 2;
}

message HelloResponse {
  uint64 unix_time = 1;
  bool client_state_request_pending = 2;
}

message ClientStateRequest {
  uint32 state_flags = 1;
}

message ClientStateResponse {
  ClientState state = 1;
}

message ClientStateChanged {
  ClientState state = 1;
  bytes checksum_before = 2;
}
