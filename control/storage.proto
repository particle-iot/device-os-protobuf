syntax = "proto3";
package particle.ctrl;

import "common.proto";

enum StorageType {
  INTERNAL = 0; // Internal flash
}

enum SectionType {
  BOOTLOADER = 0; // Bootloader
  SYSTEM_FIRMWARE = 1; // System module
  USER_FIRMWARE = 2; // User module
  MONO_FIRMWARE = 3; // Monolithic firmware
  OTA_BACKUP = 4; // Temporary storage for a firmware module
  FACTORY_BACKUP = 5; // Factory backup firmware
  CONFIG = 6; // Device configuration (DCT)
  EEPROM = 7; // EEPROM-alike memory
}

enum SectionFlag {
  NO_SECTION_FLAGS = 0; // Required by proto3
  READABLE = 0x01; // Section data is readable
  WRITABLE = 0x02; // Section data is writable
  CLEARABLE = 0x04; // Section can be cleared
  NEED_CLEAR = 0x08; // Section needs to be cleared before writing
}

// CTRL_REQUEST_START_FIRMWARE_UPDATE (250)
message StartFirmwareUpdateRequest {
  uint32 size = 1; // Size of the firmware data
}

message StartFirmwareUpdateReply {
  uint32 chunk_size = 1; // Maximum chunk size
}

// CTRL_REQUEST_FINISH_FIRMWARE_UPDATE (251)
message FinishFirmwareUpdateRequest {
  bool validate_only = 1;
}

message FinishFirmwareUpdateReply {
}

// CTRL_REQUEST_CANCEL_FIRMWARE_UPDATE (252)
message CancelFirmwareUpdateRequest {
}

message CancelFirmwareUpdateReply {
}

// CTRL_REQUEST_SAVE_FIRMWARE_DATA (253)
message SaveFirmwareDataRequest {
  bytes data = 1;
}

message SaveFirmwareDataReply {
}

// CTRL_REQUEST_DESCRIBE_STORAGE (260)
message DescribeStorageRequest {
}

message DescribeStorageReply {
  message Section {
    SectionType type = 1;
    uint32 index = 2;
    uint32 size = 3;
    uint32 flags = 4;
  }
  message Storage {
    StorageType type = 1;
    uint32 index = 2;
    uint32 flags = 3;
    repeated Section sections = 4;
  }
  repeated Storage storage = 1;
}

// CTRL_REQUEST_LOAD_STORAGE_DATA (261)
message LoadStorageDataRequest {
  uint32 storage = 1; // Storage index
  uint32 section = 2; // Section index
  uint32 offset = 3;
  uint32 size = 4;
}

message LoadStorageDataReply {
  bytes data = 1;
}

// CTRL_REQUEST_SAVE_STORAGE_DATA (262)
message SaveStorageDataRequest {
  uint32 storage = 1; // Storage index
  uint32 section = 2; // Section index
  uint32 offset = 3;
  bytes data = 4;
}

message SaveStorageDataReply {
}

// CTRL_REQUEST_CLEAR_STORAGE_SECTION (263)
message ClearStorageSectionRequest {
  uint32 storage = 1; // Storage index
  uint32 section = 2; // Section index
}

message ClearStorageSectionReply {
}
